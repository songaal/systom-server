<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="userMonthlyInvest">

    <select id="retrieveUserMonthInvestList" resultType="UserMonthlyInvest">
        <![CDATA[
        SELECT a.user_id
             , a.date
             , a.init_cash
             , a.monthly_return
             , a.monthly_return_pct
             , a.update_time

             , (SELECT SUM( SUBSTRING_INDEX(
                            SUBSTRING_INDEX(
                            SUBSTRING_INDEX(b.init_cash, '"USDT":', -1)
                                                       , ',', 1)
                                                       , '}', 1))
                  FROM user_monthly_invest b
                 WHERE b.user_id = #{param1}
             ) as sum_usdt_init_cash

             , (SELECT SUM( SUBSTRING_INDEX(
                            SUBSTRING_INDEX(
                            SUBSTRING_INDEX(b.init_cash, '"KRW":', -1)
                                                       , ',', 1)
                                                       , '}', 1))
                  FROM user_monthly_invest b
                 WHERE b.user_id = #{param1}
             ) as sum_krw_init_cash

             , (SELECT SUM( SUBSTRING_INDEX(
                            SUBSTRING_INDEX(
                            SUBSTRING_INDEX(b.monthly_return, '"USDT":', -1)
                                                            , ',', 1)
                                                            , '}', 1))
                  FROM user_monthly_invest b
                 WHERE b.date <= a.date
                   AND b.user_id = #{param1}
             ) as sum_usdt_return

             , (SELECT SUM( SUBSTRING_INDEX(
                            SUBSTRING_INDEX(
                            SUBSTRING_INDEX(b.monthly_return, '"KRW":', -1)
                                                            , ',', 1)
                                                            , '}', 1))
                  FROM user_monthly_invest b
                 WHERE b.date <= a.date
                   AND b.user_id = #{param1}
             ) as sum_krw_return
          FROM user_monthly_invest a
         WHERE a.user_id = #{param1}
         ORDER BY a.date asc
         LIMIT 6
        ]]>
    </select>

    <update id="updateMonthlyInvest" parameterType="UserMonthlyInvest">
        INSERT INTO user_monthly_invest (user_id, date, init_cash, monthly_return, monthly_return_pct)
        VALUES ( #{userId}
        , #{date}
        , #{initCash}
        , #{monthlyReturn}
        , ${monthlyReturnPct}
        )
        ON DUPLICATE KEY
        UPDATE init_cash = #{initCash}
        , monthly_return = #{monthlyReturn}
        , monthly_return_pct = ${monthlyReturnPct}
        , update_time = convert_tz(now(), @@session.time_zone, '${standardOffset}')
    </update>


    <select id="getSumUserNowMonthly" parameterType="UserMonthlySum" resultType="UserMonthlySum">
        select
        ( select ifnull(sum(a.invest_cash), 0)
            from invest_goods a
            join goods b on b.id = a.goods_id
            where date_format(a.create_time, '%Y%m') = #{date}
            and upper(b.cash_unit) = 'USDT'
            and a.user_id = #{userId}
            and a.is_paper = false
        ) as usdt_init_cash
        , ( select ifnull(sum(a.invest_cash), 0)
            from invest_goods a
            join goods b on b.id = a.goods_id
            where date_format(a.create_time, '%Y%m') = #{date}
            and upper(b.cash_unit) = 'KRW'
            and a.user_id = #{userId}
            and a.is_paper = false
        ) as krw_init_cash
        , ( select ifnull(sum(c.returns), 0)
            from invest_goods a
            join goods b on b.id = a.goods_id
            join performance_summary c on c.invest_id = a.id
            where
            (a.is_finished = false
            or date_format(a.end_time, '%Y%m') = #{date}
            or date_format(a.create_time, '%Y%m') = #{date})
            and upper(b.cash_unit) = 'USDT'
            and a.user_id = #{userId}
            and a.is_paper = false
        ) as usdt_return
            , ( select ifnull(sum(c.returns), 0)
            from invest_goods a
            join goods b on b.id = a.goods_id
            join performance_summary c on c.invest_id = a.id
            where
            (a.is_finished = false
            or date_format(a.end_time, '%Y%m') = #{date}
            or date_format(a.create_time, '%Y%m') = #{date})
            and upper(b.cash_unit) = 'KRW'
            and a.user_id = #{userId}
            and a.is_paper = false
        ) as krw_return
    </select>

    <select id="getUserMonthlyInvest" resultType="UserMonthlySum" parameterType="HashMap">
        <![CDATA[
        SELECT (SELECT IFNULL(SUM( SUBSTRING_INDEX(
                            SUBSTRING_INDEX(
                            SUBSTRING_INDEX(b.monthly_return, '"USDT":', -1)
                                                            , ',', 1)
                                                            , '}', 1)), 0)
                  FROM user_monthly_invest b
                 WHERE b.date = #{date}
                   AND b.user_id = #{userId}
             ) as usdt_return

             , (SELECT IFNULL(SUM( SUBSTRING_INDEX(
                            SUBSTRING_INDEX(
                            SUBSTRING_INDEX(b.monthly_return, '"KRW":', -1)
                                                            , ',', 1)
                                                            , '}', 1)), 0)
                  FROM user_monthly_invest b
                 WHERE b.date = #{date}
                   AND b.user_id = #{userId}
             ) as krw_return
        ]]>
    </select>

    <select id="getDailyInvest" parameterType="String" resultType="DailyInvestState">
        SELECT a.invest_cash as init_cash
            , b.equity as equity
            , b.date
            , c.cash_unit
        FROM invest_goods a
        join performance_daily b on b.invest_id = a.id
        join goods c on c.id = a.goods_id
        where a.is_paper = false
        and a.is_finished = false
        and b.date = date_format(now(), '%Y%m%d')
        and a.user_id = #{param1}
    </select>

    <select id="getSumInitCash" parameterType="String" resultType="HashMap">
        SELECT (
                SELECT ifnull(sum(a.invest_cash), 0)
                  FROM invest_goods a
                  JOIN goods b on a.goods_id = b.id
                 WHERE a.user_id = #{param1}
                   AND a.is_paper = false
                   AND upper(b.cash_unit) = 'USDT'
                ) AS sum_usdt_init_cash
                ,(SELECT ifnull(sum(a.invest_cash), 0)
                  FROM invest_goods a
                  JOIN goods b on a.goods_id = b.id
                 WHERE a.user_id = #{param1}
                   AND a.is_paper = false
                   AND upper(b.cash_unit) = 'KRW'
                ) AS sum_krw_init_cash
    </select>

    <select id="retrieveMonthlyUser" resultType="String">
        select a.user_id
        from invest_goods a
        where a.is_paper = false
        and (a.is_finished = false
        or date_format(a.create_time, '%Y%m') = date_format(now(), '%Y%m')
        or date_format(a.end_time, '%Y%m') = date_format(now(), '%Y%m') )
        group by a.user_id
    </select>
</mapper>
