<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="strategyDeploy">

    <select id="selectDeployVersions" parameterType="StrategyDeploy" resultType="StrategyDeploy">
        select id
             , version
             , create_time
             , explanation
          from strategy_deploy
         where id = ${id}
         order by version desc
    </select>

    <select id="getLastDeployVersion" parameterType="StrategyDeploy" resultType="StrategyDeploy">
        select id
             , version
             , create_time
             , code
             , options
             , user_id
             , explanation
         from strategy_deploy
        where id = ${id}
          and version = (select max(version)
                           from strategy_deploy
                          where id = ${id}
                          group by id)
    </select>

    <select id="getDeployVersion" parameterType="StrategyDeploy" resultType="StrategyDeploy">
        select b.id
        , b.name
        , a.version
        , a.create_time
        , a.code
        , a.options
        , a.user_id
        , a.explanation
        , a.is_sell
        , a.price
        , a.description
        , a.backtest
        from strategy_deploy a
        join strategy b on a.id = b.id
        where a.id = ${id}
        and a.version = ${version}
    </select>

    <insert id="insertDeployVersion" parameterType="StrategyDeploy">
        INSERT INTO strategy_deploy (id, version, user_id, create_time, code, options, explanation)
        VALUES ( ${id}
                , IFNULL((select *
                            from (SELECT MAX(version) + 1
                            FROM strategy_deploy
                            WHERE ID = ${id}) as t), 1)
                , #{userId}
                , now()
                , #{code}
                , #{options}
                , #{explanation}
                )
    </insert>

    <delete id="deleteDeployVersion" parameterType="StrategyDeploy">
        delete
          from strategy_deploy
         where id = ${id}
           and version = ${version}
    </delete>


    <update id="saveBackTest" parameterType="StrategyDeploy">
        update strategy_deploy
           set backtest = #{backtest}
         where id = ${id}
           and version = ${version}
    </update>

    <select id="retrieveStrategyMarketList" resultType="StrategyDeploy">
        select a.*
             , b.*
          from strategy a
          join (select aa.id
                    , max(aa.version) as version
                    , aa.is_sell
                    , aa.create_time
                    , aa.explanation
                 from strategy_deploy aa
                where aa.is_sell = true
                group by aa.id ) b on a.id = b.id
    </select>

    <select id="getStrategyBuyUserCount" resultType="Integer" parameterType="StrategyDeploy">
        select ifnull(count(*), 0) as sell_count
          from strategy_sell_history
         where id = ${id}
           and version = ${version}
    </select>

</mapper>
