<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="strategy">

    <select id="retrieveStrategiesByUserId" parameterType="String" resultType="Strategy">
        SELECT  a.id,
                a.name,
                a.user_id,
                a.create_time,
                a.update_time,
                b.version AS last_deploy_version,
                c.version AS last_goods_version
        FROM strategy a
        LEFT JOIN (SELECT aa.id,
                          MAX(aa.version) AS version
                     FROM strategy_deploy aa
                    WHERE aa.is_trash = false
                    GROUP BY aa.id) b ON a.id = b.id
        LEFT JOIN (SELECT bb.strategy_id,
                          MAX(bb.strategy_version) AS version
                     FROM goods bb
        GROUP BY strategy_id) c ON a.id = c.strategy_id
        WHERE a.user_id = #{userId}
        ORDER BY a.create_time DESC
    </select>

    <insert id="createBlankStrategy" parameterType="Strategy" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO strategy (NAME, USER_ID)
        VALUES ( #{name}
               , #{userId} )
    </insert>

    <select id="findStrategyById" parameterType="Strategy" resultType="Strategy">
        SELECT a.id
             , a.name
             , a.user_id
             , a.create_time
             , a.update_time
             , a.code
        FROM strategy a
        WHERE  ID = #{id}
    </select>

    <update id="updateStrategy" parameterType="Strategy">
        UPDATE strategy
           SET code = #{code}
             , update_time = now()
         WHERE id = #{id}
           and user_id = #{userId}
    </update>

    <delete id="deleteStrategy" parameterType="Strategy">
        DELETE FROM strategy
         WHERE id = #{id}
           AND user_id = #{userId}
    </delete>

</mapper>
